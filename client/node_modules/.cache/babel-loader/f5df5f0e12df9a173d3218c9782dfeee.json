{"ast":null,"code":"'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Language = require('./language');\n\nconst internals = {\n  annotations: Symbol('joi-annotations')\n};\n\ninternals.stringify = function (value, wrapArrays) {\n  const type = typeof value;\n\n  if (value === null) {\n    return 'null';\n  }\n\n  if (type === 'string') {\n    return value;\n  }\n\n  if (value instanceof exports.Err || type === 'function' || type === 'symbol') {\n    return value.toString();\n  }\n\n  if (type === 'object') {\n    if (Array.isArray(value)) {\n      let partial = '';\n\n      for (let i = 0; i < value.length; ++i) {\n        partial = partial + (partial.length ? ', ' : '') + internals.stringify(value[i], wrapArrays);\n      }\n\n      return wrapArrays ? '[' + partial + ']' : partial;\n    }\n\n    return value.toString();\n  }\n\n  return JSON.stringify(value);\n};\n\nexports.Err = class {\n  constructor(type, context, state, options, flags, message, template) {\n    this.isJoi = true;\n    this.type = type;\n    this.context = context || {};\n    this.context.key = state.path[state.path.length - 1];\n    this.context.label = state.key;\n    this.path = state.path;\n    this.options = options;\n    this.flags = flags;\n    this.message = message;\n    this.template = template;\n    const localized = this.options.language;\n\n    if (this.flags.label) {\n      this.context.label = this.flags.label;\n    } else if (localized && ( // language can be null for arrays exclusion check\n    this.context.label === '' || this.context.label === null)) {\n      this.context.label = localized.root || Language.errors.root;\n    }\n  }\n\n  toString() {\n    if (this.message) {\n      return this.message;\n    }\n\n    let format;\n\n    if (this.template) {\n      format = this.template;\n    }\n\n    const localized = this.options.language;\n    format = format || Hoek.reach(localized, this.type) || Hoek.reach(Language.errors, this.type);\n\n    if (format === undefined) {\n      return `Error code \"${this.type}\" is not defined, your custom type is missing the correct language definition`;\n    }\n\n    let wrapArrays = Hoek.reach(localized, 'messages.wrapArrays');\n\n    if (typeof wrapArrays !== 'boolean') {\n      wrapArrays = Language.errors.messages.wrapArrays;\n    }\n\n    if (format === null) {\n      const childrenString = internals.stringify(this.context.reason, wrapArrays);\n\n      if (wrapArrays) {\n        return childrenString.slice(1, -1);\n      }\n\n      return childrenString;\n    }\n\n    const hasKey = /{{!?label}}/.test(format);\n    const skipKey = format.length > 2 && format[0] === '!' && format[1] === '!';\n\n    if (skipKey) {\n      format = format.slice(2);\n    }\n\n    if (!hasKey && !skipKey) {\n      const localizedKey = Hoek.reach(localized, 'key');\n\n      if (typeof localizedKey === 'string') {\n        format = localizedKey + format;\n      } else {\n        format = Hoek.reach(Language.errors, 'key') + format;\n      }\n    }\n\n    const message = format.replace(/{{(!?)([^}]+)}}/g, ($0, isSecure, name) => {\n      const value = Hoek.reach(this.context, name);\n      const normalized = internals.stringify(value, wrapArrays);\n      return isSecure && this.options.escapeHtml ? Hoek.escapeHtml(normalized) : normalized;\n    });\n\n    this.toString = () => message; // Persist result of last toString call, it won't change\n\n\n    return message;\n  }\n\n};\n\nexports.create = function (type, context, state, options, flags, message, template) {\n  return new exports.Err(type, context, state, options, flags, message, template);\n};\n\nexports.process = function (errors, object) {\n  if (!errors) {\n    return null;\n  } // Construct error\n\n\n  let message = '';\n  const details = [];\n\n  const processErrors = function (localErrors, parent, overrideMessage) {\n    for (let i = 0; i < localErrors.length; ++i) {\n      const item = localErrors[i];\n\n      if (item instanceof Error) {\n        return item;\n      }\n\n      if (item.flags.error && typeof item.flags.error !== 'function') {\n        if (!item.flags.selfError || !item.context.reason) {\n          return item.flags.error;\n        }\n      }\n\n      let itemMessage;\n\n      if (parent === undefined) {\n        itemMessage = item.toString();\n        message = message + (message ? '. ' : '') + itemMessage;\n      } // Do not push intermediate errors, we're only interested in leafs\n\n\n      if (item.context.reason) {\n        const override = processErrors(item.context.reason, item.path, item.type === 'override' ? item.message : null);\n\n        if (override) {\n          return override;\n        }\n      } else {\n        details.push({\n          message: overrideMessage || itemMessage || item.toString(),\n          path: item.path,\n          type: item.type,\n          context: item.context\n        });\n      }\n    }\n  };\n\n  const override = processErrors(errors);\n\n  if (override) {\n    return override;\n  }\n\n  const error = new Error(message);\n  error.isJoi = true;\n  error.name = 'ValidationError';\n  error.details = details;\n  error._object = object;\n  error.annotate = internals.annotate;\n  return error;\n}; // Inspired by json-stringify-safe\n\n\ninternals.safeStringify = function (obj, spaces) {\n  return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\ninternals.serializer = function () {\n  const keys = [];\n  const stack = [];\n\n  const cycleReplacer = (key, value) => {\n    if (stack[0] === value) {\n      return '[Circular ~]';\n    }\n\n    return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n  };\n\n  return function (key, value) {\n    if (stack.length > 0) {\n      const thisPos = stack.indexOf(this);\n\n      if (~thisPos) {\n        stack.length = thisPos + 1;\n        keys.length = thisPos + 1;\n        keys[thisPos] = key;\n      } else {\n        stack.push(this);\n        keys.push(key);\n      }\n\n      if (~stack.indexOf(value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    if (value) {\n      const annotations = value[internals.annotations];\n\n      if (annotations) {\n        if (Array.isArray(value)) {\n          const annotated = [];\n\n          for (let i = 0; i < value.length; ++i) {\n            if (annotations.errors[i]) {\n              annotated.push(`_$idx$_${annotations.errors[i].sort().join(', ')}_$end$_`);\n            }\n\n            annotated.push(value[i]);\n          }\n\n          value = annotated;\n        } else {\n          const errorKeys = Object.keys(annotations.errors);\n\n          for (let i = 0; i < errorKeys.length; ++i) {\n            const errorKey = errorKeys[i];\n            value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(', ')}_$end$_`] = value[errorKey];\n            value[errorKey] = undefined;\n          }\n\n          const missingKeys = Object.keys(annotations.missing);\n\n          for (let i = 0; i < missingKeys.length; ++i) {\n            const missingKey = missingKeys[i];\n            value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = '__missing__';\n          }\n        }\n\n        return value;\n      }\n    }\n\n    if (value === Infinity || value === -Infinity || Number.isNaN(value) || typeof value === 'function' || typeof value === 'symbol') {\n      return '[' + value.toString() + ']';\n    }\n\n    return value;\n  };\n};\n\ninternals.annotate = function (stripColorCodes) {\n  const redFgEscape = stripColorCodes ? '' : '\\u001b[31m';\n  const redBgEscape = stripColorCodes ? '' : '\\u001b[41m';\n  const endColor = stripColorCodes ? '' : '\\u001b[0m';\n\n  if (typeof this._object !== 'object') {\n    return this.details[0].message;\n  }\n\n  const obj = Hoek.clone(this._object || {});\n\n  for (let i = this.details.length - 1; i >= 0; --i) {\n    // Reverse order to process deepest child first\n    const pos = i + 1;\n    const error = this.details[i];\n    const path = error.path;\n    let ref = obj;\n\n    for (let j = 0;; ++j) {\n      const seg = path[j];\n\n      if (ref.isImmutable) {\n        ref = ref.clone(); // joi schemas are not cloned by hoek, we have to take this extra step\n      }\n\n      if (j + 1 < path.length && ref[seg] && typeof ref[seg] !== 'string') {\n        ref = ref[seg];\n      } else {\n        const refAnnotations = ref[internals.annotations] = ref[internals.annotations] || {\n          errors: {},\n          missing: {}\n        };\n        const value = ref[seg];\n        const cacheKey = seg || error.context.label;\n\n        if (value !== undefined) {\n          refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n          refAnnotations.errors[cacheKey].push(pos);\n        } else {\n          refAnnotations.missing[cacheKey] = pos;\n        }\n\n        break;\n      }\n    }\n  }\n\n  const replacers = {\n    key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\"/g,\n    missing: /\"_\\$miss\\$_([^|]+)\\|(\\d+)_\\$end\\$_\": \"__missing__\"/g,\n    arrayIndex: /\\s*\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\",?\\n(.*)/g,\n    specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)]\"/g\n  };\n  let message = internals.safeStringify(obj, 2).replace(replacers.key, ($0, $1) => `\" ${redFgEscape}[${$1}]${endColor}`).replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}\"${$1}\"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`).replace(replacers.arrayIndex, ($0, $1, $2) => `\\n${$2} ${redFgEscape}[${$1}]${endColor}`).replace(replacers.specials, ($0, $1) => $1);\n  message = `${message}\\n${redFgEscape}`;\n\n  for (let i = 0; i < this.details.length; ++i) {\n    const pos = i + 1;\n    message = `${message}\\n[${pos}] ${this.details[i].message}`;\n  }\n\n  message = message + endColor;\n  return message;\n};","map":{"version":3,"sources":["C:/Users/Asus A455L/portfolio-rizky/portfolio2/client/node_modules/@hapi/joi/lib/errors.js"],"names":["Hoek","require","Language","internals","annotations","Symbol","stringify","value","wrapArrays","type","exports","Err","toString","Array","isArray","partial","i","length","JSON","constructor","context","state","options","flags","message","template","isJoi","key","path","label","localized","language","root","errors","format","reach","undefined","messages","childrenString","reason","slice","hasKey","test","skipKey","localizedKey","replace","$0","isSecure","name","normalized","escapeHtml","create","process","object","details","processErrors","localErrors","parent","overrideMessage","item","Error","error","selfError","itemMessage","override","push","_object","annotate","safeStringify","obj","spaces","serializer","keys","stack","cycleReplacer","indexOf","join","thisPos","call","annotated","sort","errorKeys","Object","errorKey","missingKeys","missing","missingKey","Infinity","Number","isNaN","stripColorCodes","redFgEscape","redBgEscape","endColor","clone","pos","ref","j","seg","isImmutable","refAnnotations","cacheKey","replacers","arrayIndex","specials","$1","$2"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Language = require('./language');\n\n\nconst internals = {\n    annotations: Symbol('joi-annotations')\n};\n\n\ninternals.stringify = function (value, wrapArrays) {\n\n    const type = typeof value;\n\n    if (value === null) {\n        return 'null';\n    }\n\n    if (type === 'string') {\n        return value;\n    }\n\n    if (value instanceof exports.Err || type === 'function' || type === 'symbol') {\n        return value.toString();\n    }\n\n    if (type === 'object') {\n        if (Array.isArray(value)) {\n            let partial = '';\n\n            for (let i = 0; i < value.length; ++i) {\n                partial = partial + (partial.length ? ', ' : '') + internals.stringify(value[i], wrapArrays);\n            }\n\n            return wrapArrays ? '[' + partial + ']' : partial;\n        }\n\n        return value.toString();\n    }\n\n    return JSON.stringify(value);\n};\n\n\nexports.Err = class {\n\n    constructor(type, context, state, options, flags, message, template) {\n\n        this.isJoi = true;\n        this.type = type;\n        this.context = context || {};\n        this.context.key = state.path[state.path.length - 1];\n        this.context.label = state.key;\n        this.path = state.path;\n        this.options = options;\n        this.flags = flags;\n        this.message = message;\n        this.template = template;\n\n        const localized = this.options.language;\n\n        if (this.flags.label) {\n            this.context.label = this.flags.label;\n        }\n        else if (localized &&                   // language can be null for arrays exclusion check\n            (this.context.label === '' ||\n            this.context.label === null)) {\n            this.context.label = localized.root || Language.errors.root;\n        }\n    }\n\n    toString() {\n\n        if (this.message) {\n            return this.message;\n        }\n\n        let format;\n\n        if (this.template) {\n            format = this.template;\n        }\n\n        const localized = this.options.language;\n\n        format = format || Hoek.reach(localized, this.type) || Hoek.reach(Language.errors, this.type);\n\n        if (format === undefined) {\n            return `Error code \"${this.type}\" is not defined, your custom type is missing the correct language definition`;\n        }\n\n        let wrapArrays = Hoek.reach(localized, 'messages.wrapArrays');\n        if (typeof wrapArrays !== 'boolean') {\n            wrapArrays = Language.errors.messages.wrapArrays;\n        }\n\n        if (format === null) {\n            const childrenString = internals.stringify(this.context.reason, wrapArrays);\n            if (wrapArrays) {\n                return childrenString.slice(1, -1);\n            }\n\n            return childrenString;\n        }\n\n        const hasKey = /{{!?label}}/.test(format);\n        const skipKey = format.length > 2 && format[0] === '!' && format[1] === '!';\n\n        if (skipKey) {\n            format = format.slice(2);\n        }\n\n        if (!hasKey && !skipKey) {\n            const localizedKey = Hoek.reach(localized, 'key');\n            if (typeof localizedKey === 'string') {\n                format = localizedKey + format;\n            }\n            else {\n                format = Hoek.reach(Language.errors, 'key') + format;\n            }\n        }\n\n        const message =  format.replace(/{{(!?)([^}]+)}}/g, ($0, isSecure, name) => {\n\n            const value = Hoek.reach(this.context, name);\n            const normalized = internals.stringify(value, wrapArrays);\n            return (isSecure && this.options.escapeHtml ? Hoek.escapeHtml(normalized) : normalized);\n        });\n\n        this.toString = () => message;  // Persist result of last toString call, it won't change\n\n        return message;\n    }\n\n};\n\n\nexports.create = function (type, context, state, options, flags, message, template) {\n\n    return new exports.Err(type, context, state, options, flags, message, template);\n};\n\n\nexports.process = function (errors, object) {\n\n    if (!errors) {\n        return null;\n    }\n\n    // Construct error\n\n    let message = '';\n    const details = [];\n\n    const processErrors = function (localErrors, parent, overrideMessage) {\n\n        for (let i = 0; i < localErrors.length; ++i) {\n            const item = localErrors[i];\n\n            if (item instanceof Error) {\n                return item;\n            }\n\n            if (item.flags.error && typeof item.flags.error !== 'function') {\n                if (!item.flags.selfError || !item.context.reason) {\n                    return item.flags.error;\n                }\n            }\n\n            let itemMessage;\n            if (parent === undefined) {\n                itemMessage = item.toString();\n                message = message + (message ? '. ' : '') + itemMessage;\n            }\n\n            // Do not push intermediate errors, we're only interested in leafs\n\n            if (item.context.reason) {\n                const override = processErrors(item.context.reason, item.path, item.type === 'override' ? item.message : null);\n                if (override) {\n                    return override;\n                }\n            }\n            else {\n                details.push({\n                    message: overrideMessage || itemMessage || item.toString(),\n                    path: item.path,\n                    type: item.type,\n                    context: item.context\n                });\n            }\n        }\n    };\n\n    const override = processErrors(errors);\n    if (override) {\n        return override;\n    }\n\n    const error = new Error(message);\n    error.isJoi = true;\n    error.name = 'ValidationError';\n    error.details = details;\n    error._object = object;\n    error.annotate = internals.annotate;\n    return error;\n};\n\n\n// Inspired by json-stringify-safe\n\ninternals.safeStringify = function (obj, spaces) {\n\n    return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\n\ninternals.serializer = function () {\n\n    const keys = [];\n    const stack = [];\n\n    const cycleReplacer = (key, value) => {\n\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n\n        return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n    };\n\n    return function (key, value) {\n\n        if (stack.length > 0) {\n            const thisPos = stack.indexOf(this);\n            if (~thisPos) {\n                stack.length = thisPos + 1;\n                keys.length = thisPos + 1;\n                keys[thisPos] = key;\n            }\n            else {\n                stack.push(this);\n                keys.push(key);\n            }\n\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n\n        if (value) {\n            const annotations = value[internals.annotations];\n            if (annotations) {\n                if (Array.isArray(value)) {\n                    const annotated = [];\n\n                    for (let i = 0; i < value.length; ++i) {\n                        if (annotations.errors[i]) {\n                            annotated.push(`_$idx$_${annotations.errors[i].sort().join(', ')}_$end$_`);\n                        }\n\n                        annotated.push(value[i]);\n                    }\n\n                    value = annotated;\n                }\n                else {\n                    const errorKeys = Object.keys(annotations.errors);\n                    for (let i = 0; i < errorKeys.length; ++i) {\n                        const errorKey = errorKeys[i];\n                        value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(', ')}_$end$_`] = value[errorKey];\n                        value[errorKey] = undefined;\n                    }\n\n                    const missingKeys = Object.keys(annotations.missing);\n                    for (let i = 0; i < missingKeys.length; ++i) {\n                        const missingKey = missingKeys[i];\n                        value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = '__missing__';\n                    }\n                }\n\n                return value;\n            }\n        }\n\n        if (value === Infinity || value === -Infinity || Number.isNaN(value) ||\n            typeof value === 'function' || typeof value === 'symbol') {\n            return '[' + value.toString() + ']';\n        }\n\n        return value;\n    };\n};\n\n\ninternals.annotate = function (stripColorCodes) {\n\n    const redFgEscape = stripColorCodes ? '' : '\\u001b[31m';\n    const redBgEscape = stripColorCodes ? '' : '\\u001b[41m';\n    const endColor = stripColorCodes ? '' : '\\u001b[0m';\n\n    if (typeof this._object !== 'object') {\n        return this.details[0].message;\n    }\n\n    const obj = Hoek.clone(this._object || {});\n\n    for (let i = this.details.length - 1; i >= 0; --i) {        // Reverse order to process deepest child first\n        const pos = i + 1;\n        const error = this.details[i];\n        const path = error.path;\n        let ref = obj;\n        for (let j = 0; ; ++j) {\n            const seg = path[j];\n\n            if (ref.isImmutable) {\n                ref = ref.clone();                              // joi schemas are not cloned by hoek, we have to take this extra step\n            }\n\n            if (j + 1 < path.length &&\n                ref[seg] &&\n                typeof ref[seg] !== 'string') {\n\n                ref = ref[seg];\n            }\n            else {\n                const refAnnotations = ref[internals.annotations] = ref[internals.annotations] || { errors: {}, missing: {} };\n                const value = ref[seg];\n                const cacheKey = seg || error.context.label;\n\n                if (value !== undefined) {\n                    refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n                    refAnnotations.errors[cacheKey].push(pos);\n                }\n                else {\n                    refAnnotations.missing[cacheKey] = pos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    const replacers = {\n        key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\"/g,\n        missing: /\"_\\$miss\\$_([^|]+)\\|(\\d+)_\\$end\\$_\": \"__missing__\"/g,\n        arrayIndex: /\\s*\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\",?\\n(.*)/g,\n        specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)]\"/g\n    };\n\n    let message = internals.safeStringify(obj, 2)\n        .replace(replacers.key, ($0, $1) => `\" ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}\"${$1}\"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`)\n        .replace(replacers.arrayIndex, ($0, $1, $2) => `\\n${$2} ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.specials, ($0, $1) => $1);\n\n    message = `${message}\\n${redFgEscape}`;\n\n    for (let i = 0; i < this.details.length; ++i) {\n        const pos = i + 1;\n        message = `${message}\\n[${pos}] ${this.details[i].message}`;\n    }\n\n    message = message + endColor;\n\n    return message;\n};\n"]},"metadata":{},"sourceType":"script"}