{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\explore-component\\\\Movie-details.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport SearchMovie from \"./Search-movie\";\nconst server = \"http://localhost:443/api\";\nexport default class MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ratings = () => {\n      const movie = this.state.movie;\n\n      if (movie.Ratings) {\n        return movie.Ratings.map((rating, index) => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }\n          }, \"Source\", rating.Source, \": \", rating.Value);\n        });\n      }\n    };\n\n    this.displayDetails = () => {\n      const movie = this.state.movie;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, movie.Title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, \"Genre: \", movie.Genre), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, \"Director: \", movie.Director), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Writer : \", movie.Writer), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Actors : \", movie.Actors), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"Language: \", movie.Language), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"IMDB Rating : \", movie.imdbRating, \"/10 From \", movie.imdbVotes, \" Votes\"), this.ratings())), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, \"Rated : \", movie.Rated), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"Year : \", movie.Year), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, \"Runtime : \", movie.Runtime), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, \"Type : \", movie.Type), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"Plot: \", movie.Plot), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"Awards: \", movie.Awards), /*#__PURE__*/React.createElement(\"img\", {\n        src: movie.Poster,\n        height: \"180\",\n        width: \"160\",\n        alt: movie.Title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.state = {\n      movie: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${server}/getmovie/${this.props.match.params.imdbID}`).then(res => {\n      this.setState({\n        movie: res.data\n      });\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchMovie, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), this.displayDetails());\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/explore-component/Movie-details.js"],"names":["React","axios","SearchMovie","server","MovieDetails","Component","constructor","props","ratings","movie","state","Ratings","map","rating","index","Source","Value","displayDetails","Title","Genre","Director","Writer","Actors","Language","imdbRating","imdbVotes","Rated","Year","Runtime","Type","Plot","Awards","Poster","componentDidMount","get","match","params","imdbID","then","res","setState","data","console","log","catch","err","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchMovie from \"./Search-movie\";\r\n\r\nconst server = \"http://localhost:443/api\";\r\n\r\nexport default class MovieDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movie: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${server}/getmovie/${this.props.match.params.imdbID}`)\r\n      .then((res) => {\r\n        this.setState({ movie: res.data });\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  ratings = () => {\r\n    const movie = this.state.movie;\r\n    if (movie.Ratings) {\r\n      return movie.Ratings.map((rating, index) => {\r\n        return (\r\n          <li key={index}>\r\n            Source{rating.Source}: {rating.Value}\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  displayDetails = () => {\r\n    const movie = this.state.movie;\r\n    return (\r\n      <div>\r\n        <h3>{movie.Title}</h3>\r\n        <p>Genre: {movie.Genre}</p>\r\n        <p>Director: {movie.Director}</p>\r\n        <p>Writer : {movie.Writer}</p>\r\n        <p>Actors : {movie.Actors}</p>\r\n        <p>Language: {movie.Language}</p>\r\n        <div>\r\n          <ul>\r\n            <li>\r\n              IMDB Rating : {movie.imdbRating}/10 From {movie.imdbVotes} Votes\r\n            </li>\r\n            {this.ratings()}\r\n          </ul>\r\n        </div>\r\n        <p>Rated : {movie.Rated}</p>\r\n        <p>Year : {movie.Year}</p>\r\n        <p>Runtime : {movie.Runtime}</p>\r\n        <p>Type : {movie.Type}</p>\r\n        <p>Plot: {movie.Plot}</p>\r\n        <p>Awards: {movie.Awards}</p>\r\n        <img src={movie.Poster} height=\"180\" width=\"160\" alt={movie.Title} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchMovie />\r\n        {this.displayDetails()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}