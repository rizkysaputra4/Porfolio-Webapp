{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\wall-component\\\\Edit-post-page.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nexport default class EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCloseModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShowModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.EditPostModal = () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        onClick: () => this.handleShowModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Modal, {\n        size: \"lg\",\n        backdrop: \"static\",\n        keyboard: false,\n        show: this.state.show,\n        onHide: () => this.handleCloseModal(),\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"w-100 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, \"Edit Post\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, this.editPostForm())));\n    };\n\n    this.onChangeUpdatePost = this.onChangeUpdatePost.bind(this);\n    this.onSubmitUpdatePost = this.onSubmitUpdatePost.bind(this);\n    this.editPostForm = this.editPostForm.bind(this);\n    this.state = {\n      textPost: \"\",\n      updateTextPost: \"\",\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${this.props.server}/get/${this.props.postID}`).then(post => {\n      this.setState({\n        textPost: post.data.post,\n        updateTextPost: post.data.post\n      });\n    }).catch(err => console.log(err));\n  }\n\n  onChangeUpdatePost(e) {\n    this.setState({\n      updateTextPost: e.target.value\n    });\n  }\n\n  onSubmitUpdatePost(e) {\n    e.preventDefault();\n    const post = {\n      post: this.state.updateTextPost,\n      withCredentials: true\n    };\n    axios.post(`${this.props.server}/updatePost/${this.props.postID}`, post).then(res => {\n      console.log(res.data);\n\n      if (res.data.error) {\n        this.setState({\n          updateTextPost: this.state.textPost\n        });\n        this.props.notify(res.data.error, res.data.error);\n      } else {\n        this.props.notify(res.data.error, \"Edited\");\n        this.handleCloseModal();\n        const postIndex = this.props.postList.findIndex(el => {\n          return el._id === this.props.postID;\n        });\n        const postList = this.props.postList;\n        const myPostList = this.props.myPostList;\n        const updatePostList = this.props.updatePostList;\n        postList[postIndex].post = post.post;\n\n        if (myPostList.length !== 0 && typeof myPostList !== undefined) {\n          const myPostIndex = this.props.myPostList.findIndex(el => {\n            return el._id === this.props.postID;\n          });\n          myPostList[myPostIndex].post = post.post;\n          updatePostList(postList, myPostList);\n        } else {\n          updatePostList(postList);\n        }\n      }\n    }).catch(err => console.log(err));\n  }\n\n  editPostForm() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: e => this.onSubmitUpdatePost(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: 5,\n      value: this.state.updateTextPost,\n      onChange: this.onChangeUpdatePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mx-auto\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Edit\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(this.EditPostModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/wall-component/Edit-post-page.js"],"names":["React","axios","Modal","Button","Form","EditPost","Component","constructor","props","handleCloseModal","setState","show","handleShowModal","EditPostModal","state","editPostForm","onChangeUpdatePost","bind","onSubmitUpdatePost","textPost","updateTextPost","componentDidMount","get","server","postID","then","post","data","catch","err","console","log","e","target","value","preventDefault","withCredentials","res","error","notify","postIndex","postList","findIndex","el","_id","myPostList","updatePostList","length","undefined","myPostIndex","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nexport default class EditPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUpdatePost = this.onChangeUpdatePost.bind(this);\r\n    this.onSubmitUpdatePost = this.onSubmitUpdatePost.bind(this);\r\n    this.editPostForm = this.editPostForm.bind(this);\r\n\r\n    this.state = {\r\n      textPost: \"\",\r\n      updateTextPost: \"\",\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(`${this.props.server}/get/${this.props.postID}`)\r\n      .then((post) => {\r\n        this.setState({\r\n          textPost: post.data.post,\r\n          updateTextPost: post.data.post,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onChangeUpdatePost(e) {\r\n    this.setState({\r\n      updateTextPost: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmitUpdatePost(e) {\r\n    e.preventDefault();\r\n    const post = {\r\n      post: this.state.updateTextPost,\r\n      withCredentials: true,\r\n    };\r\n\r\n    axios\r\n      .post(`${this.props.server}/updatePost/${this.props.postID}`, post)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.error) {\r\n          this.setState({\r\n            updateTextPost: this.state.textPost,\r\n          });\r\n          this.props.notify(res.data.error, res.data.error);\r\n        } else {\r\n          this.props.notify(res.data.error, \"Edited\");\r\n          this.handleCloseModal();\r\n\r\n          const postIndex = this.props.postList.findIndex((el) => {\r\n            return el._id === this.props.postID;\r\n          });\r\n\r\n          const postList = this.props.postList;\r\n          const myPostList = this.props.myPostList;\r\n          const updatePostList = this.props.updatePostList;\r\n          postList[postIndex].post = post.post;\r\n\r\n          if (myPostList.length !== 0 && typeof myPostList !== undefined) {\r\n            const myPostIndex = this.props.myPostList.findIndex((el) => {\r\n              return el._id === this.props.postID;\r\n            });\r\n            myPostList[myPostIndex].post = post.post;\r\n            updatePostList(postList, myPostList);\r\n          } else {\r\n            updatePostList(postList);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  editPostForm() {\r\n    return (\r\n      <Form onSubmit={(e) => this.onSubmitUpdatePost(e)}>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            value={this.state.updateTextPost}\r\n            onChange={this.onChangeUpdatePost}\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"w-100 d-flex justify-content-center\">\r\n          <Button className=\"mx-auto\" type=\"submit\">\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleShowModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  EditPostModal = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          className=\"dropdown-item\"\r\n          onClick={() => this.handleShowModal()}\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        <Modal\r\n          size=\"lg\"\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          show={this.state.show}\r\n          onHide={() => this.handleCloseModal()}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n              <Modal.Title>Edit Post</Modal.Title>\r\n            </div>\r\n          </Modal.Header>\r\n          <Modal.Body>{this.editPostForm()}</Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <this.EditPostModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}