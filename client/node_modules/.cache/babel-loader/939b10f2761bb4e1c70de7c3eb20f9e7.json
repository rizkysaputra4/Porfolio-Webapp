{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\explore-component\\\\Display-movies.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport SearchMovie from \"./Search-movie\";\nimport SearchResults from \"./Search-result\";\nconst server = \"http://localhost:443/api\";\nexport default class DisplayMovies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSearchResult = (keyword, result) => {\n      this.setState({\n        searchKeyword: keyword,\n        searchResult: result\n      });\n      console.log(this.state.searchResult);\n    };\n\n    this.movieRecommendations = () => {\n      return this.state.movieList.map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          movie: movie,\n          server: server,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.hideRecommendations = () => {\n      this.setState({\n        displayRecommendations: false\n      });\n    };\n\n    this.displayRecommendations = () => {\n      if (this.state.displayRecommendations) {\n        console.log(this.state.displayRecommendations);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, \"Movie Recommendations\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }), this.movieRecommendations());\n      } else {\n        return null;\n      }\n    };\n\n    this.state = {\n      searchText: \"\",\n      movieList: [],\n      displayRecommendations: true,\n      searchKeyword: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${server}/recommendations`).then(res => {\n      console.log(res.data);\n      this.setState({\n        movieList: res.data\n      });\n      console.log(this.state.movieList);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), this.displayRecommendations(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row flex-md-wrap mx-auto justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(this.displaySearchResult, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/explore-component/Display-movies.js"],"names":["React","axios","Movie","SearchMovie","SearchResults","server","DisplayMovies","Component","constructor","props","getSearchResult","keyword","result","setState","searchKeyword","searchResult","console","log","state","movieRecommendations","movieList","map","movie","index","hideRecommendations","displayRecommendations","searchText","componentDidMount","get","then","res","data","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport SearchMovie from \"./Search-movie\";\r\nimport SearchResults from \"./Search-result\";\r\n\r\nconst server = \"http://localhost:443/api\";\r\n\r\nexport default class DisplayMovies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchText: \"\",\r\n      movieList: [],\r\n      displayRecommendations: true,\r\n\r\n      searchKeyword: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`${server}/recommendations`).then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ movieList: res.data });\r\n      console.log(this.state.movieList);\r\n    });\r\n  }\r\n\r\n  getSearchResult = (keyword, result) => {\r\n    this.setState({ searchKeyword: keyword, searchResult: result });\r\n    console.log(this.state.searchResult);\r\n  };\r\n\r\n  movieRecommendations = () => {\r\n    return this.state.movieList.map((movie, index) => {\r\n      return <Movie movie={movie} server={server} />;\r\n    });\r\n  };\r\n\r\n  hideRecommendations = () => {\r\n    this.setState({ displayRecommendations: false });\r\n  };\r\n\r\n  displayRecommendations = () => {\r\n    if (this.state.displayRecommendations) {\r\n      console.log(this.state.displayRecommendations);\r\n      return (\r\n        <div>\r\n          <h2 align=\"center\">Movie Recommendations</h2>\r\n          <br></br>\r\n\r\n          {this.movieRecommendations()}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        {this.displayRecommendations()}\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row flex-md-wrap mx-auto justify-content-center\">\r\n            <this.displaySearchResult />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}