{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\explore-component\\\\Search-page.js\";\nimport React from \"react\";\nimport SearchResults from \"./Search-result\";\nimport axios from \"axios\";\nimport SearchMovie from \"./Search-movie\";\nimport { Pagination } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nconst server = \"http://localhost:443/api\";\nexport default class SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displaySearchResult = () => {\n      if (!this.state.searchResult) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, \"Movie with Title \\\"\", this.props.match.params.keyword, \"\\\" is not found\"));\n      } else {\n        return this.state.searchResult.map((movie, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(SearchResults, {\n            movie: movie,\n            server: this.props.location.server,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }\n          }));\n        });\n      }\n    };\n\n    this.updateSearchResult = result => {\n      this.setState({\n        searchResult: result\n      });\n    };\n\n    this.pageButton = () => {\n      let i;\n      let pageMax;\n      let pageNow = this.props.match.params.page;\n      let arr = [];\n      const totalResult = this.state.searchResult.totalResult;\n\n      if (totalResult % 10 === 0) {\n        pageMax = Math.floor(totalResult / 10);\n      } else {\n        pageMax = Math.floor(totalResult / 10) + 1;\n      }\n\n      for (i = pageNow - 3; i <= pageNow + 3; i++) {\n        if (i > 0 && i <= pageMax) {\n          arr.push(i);\n        }\n      }\n\n      return arr.map((page, index) => {\n        if (page === this.props.match.params.page) {\n          return /*#__PURE__*/React.createElement(Pagination.Item, {\n            key: index,\n            active: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }\n          }, page);\n        } else {\n          return /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: `/search-movie/${this.state.searchText.trim()}/${page}`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Pagination.Item, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }\n          }, page));\n        }\n      });\n    };\n\n    this.state = {\n      searchResult: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"server\", this.props.location.server);\n    console.log(\"movie\", this.props.location.movie);\n    console.log(\"leyword\", this.props.match.params.keyword);\n    console.log(\"page\", this.props.match.params.page);\n    axios.get(`${server}/searchmovie/${this.props.match.params.keyword}/${this.props.match.params.page}`).then(res => {\n      this.setState({\n        searchResult: res.data.Search\n      });\n      console.log(\"search res\", res.data);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.keyword !== this.props.match.params.keyword || prevProps.match.params.page !== this.props.match.params.page) {\n      axios.get(`${server}/searchmovie/${this.props.match.params.keyword}/${this.props.match.params.page}`).then(res => {\n        this.setState({\n          searchResult: res.data.Search\n        });\n        console.log(\"search res\", res.data);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchMovie, {\n      updateResult: this.updateSearchResult,\n      server: server,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row flex-md-wrap mx-auto justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(this.displaySearchResult, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/explore-component/Search-page.js"],"names":["React","SearchResults","axios","SearchMovie","Pagination","Link","server","SearchPage","Component","constructor","props","displaySearchResult","state","searchResult","match","params","keyword","map","movie","index","location","updateSearchResult","result","setState","pageButton","i","pageMax","pageNow","page","arr","totalResult","Math","floor","push","pathname","searchText","trim","componentDidMount","console","log","get","then","res","data","Search","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport SearchResults from \"./Search-result\";\r\nimport axios from \"axios\";\r\nimport SearchMovie from \"./Search-movie\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst server = \"http://localhost:443/api\";\r\nexport default class SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchResult: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"server\", this.props.location.server);\r\n    console.log(\"movie\", this.props.location.movie);\r\n    console.log(\"leyword\", this.props.match.params.keyword);\r\n    console.log(\"page\", this.props.match.params.page);\r\n\r\n    axios\r\n      .get(\r\n        `${server}/searchmovie/${this.props.match.params.keyword}/${this.props.match.params.page}`\r\n      )\r\n      .then((res) => {\r\n        this.setState({ searchResult: res.data.Search });\r\n        console.log(\"search res\", res.data);\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.keyword !== this.props.match.params.keyword ||\r\n      prevProps.match.params.page !== this.props.match.params.page\r\n    ) {\r\n      axios\r\n        .get(\r\n          `${server}/searchmovie/${this.props.match.params.keyword}/${this.props.match.params.page}`\r\n        )\r\n        .then((res) => {\r\n          this.setState({ searchResult: res.data.Search });\r\n          console.log(\"search res\", res.data);\r\n        });\r\n    }\r\n  }\r\n\r\n  displaySearchResult = () => {\r\n    if (!this.state.searchResult) {\r\n      return (\r\n        <div>\r\n          <h5>\r\n            Movie with Title \"{this.props.match.params.keyword}\" is not found\r\n          </h5>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.searchResult.map((movie, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <SearchResults movie={movie} server={this.props.location.server} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  updateSearchResult = (result) => {\r\n    this.setState({ searchResult: result });\r\n  };\r\n\r\n  pageButton = () => {\r\n    let i;\r\n    let pageMax;\r\n    let pageNow = this.props.match.params.page;\r\n    let arr = [];\r\n    const totalResult = this.state.searchResult.totalResult;\r\n    if (totalResult % 10 === 0) {\r\n      pageMax = Math.floor(totalResult / 10);\r\n    } else {\r\n      pageMax = Math.floor(totalResult / 10) + 1;\r\n    }\r\n\r\n    for (i = pageNow - 3; i <= pageNow + 3; i++) {\r\n      if (i > 0 && i <= pageMax) {\r\n        arr.push(i);\r\n      }\r\n    }\r\n\r\n    return arr.map((page, index) => {\r\n      if (page === this.props.match.params.page) {\r\n        return (\r\n          <Pagination.Item key={index} active>\r\n            {page}\r\n          </Pagination.Item>\r\n        );\r\n      } else {\r\n        return (\r\n          <Link\r\n            to={{\r\n              pathname: `/search-movie/${this.state.searchText.trim()}/${page}`,\r\n            }}\r\n          >\r\n            <Pagination.Item key={index}>{page}</Pagination.Item>\r\n          </Link>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchMovie updateResult={this.updateSearchResult} server={server} />\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row flex-md-wrap mx-auto justify-content-center\">\r\n            <this.displaySearchResult />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}