{"ast":null,"code":"'use strict';\n\nconst internals = {};\n\nmodule.exports = function (array1, array2, options = {}) {\n  if (!array1 || !array2) {\n    return options.first ? null : [];\n  }\n\n  const common = [];\n  const hash = Array.isArray(array1) ? new Set(array1) : array1;\n  const found = new Set();\n\n  for (const value of array2) {\n    if (internals.has(hash, value) && !found.has(value)) {\n      if (options.first) {\n        return value;\n      }\n\n      common.push(value);\n      found.add(value);\n    }\n  }\n\n  return options.first ? null : common;\n};\n\ninternals.has = function (ref, key) {\n  if (typeof ref.has === 'function') {\n    return ref.has(key);\n  }\n\n  return ref[key] !== undefined;\n};","map":{"version":3,"sources":["C:/Users/Asus A455L/portfolio-rizky/portfolio2/client/node_modules/@hapi/hoek/lib/intersect.js"],"names":["internals","module","exports","array1","array2","options","first","common","hash","Array","isArray","Set","found","value","has","push","add","ref","key","undefined"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG,EAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,OAAO,GAAG,EAApC,EAAwC;AAErD,MAAI,CAACF,MAAD,IACA,CAACC,MADL,EACa;AAET,WAAQC,OAAO,CAACC,KAAR,GAAgB,IAAhB,GAAuB,EAA/B;AACH;;AAED,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,IAAI,GAAIC,KAAK,CAACC,OAAN,CAAcP,MAAd,IAAwB,IAAIQ,GAAJ,CAAQR,MAAR,CAAxB,GAA0CA,MAAxD;AACA,QAAMS,KAAK,GAAG,IAAID,GAAJ,EAAd;;AACA,OAAK,MAAME,KAAX,IAAoBT,MAApB,EAA4B;AACxB,QAAIJ,SAAS,CAACc,GAAV,CAAcN,IAAd,EAAoBK,KAApB,KACA,CAACD,KAAK,CAACE,GAAN,CAAUD,KAAV,CADL,EACuB;AAEnB,UAAIR,OAAO,CAACC,KAAZ,EAAmB;AACf,eAAOO,KAAP;AACH;;AAEDN,MAAAA,MAAM,CAACQ,IAAP,CAAYF,KAAZ;AACAD,MAAAA,KAAK,CAACI,GAAN,CAAUH,KAAV;AACH;AACJ;;AAED,SAAQR,OAAO,CAACC,KAAR,GAAgB,IAAhB,GAAuBC,MAA/B;AACH,CAzBD;;AA4BAP,SAAS,CAACc,GAAV,GAAgB,UAAUG,GAAV,EAAeC,GAAf,EAAoB;AAEhC,MAAI,OAAOD,GAAG,CAACH,GAAX,KAAmB,UAAvB,EAAmC;AAC/B,WAAOG,GAAG,CAACH,GAAJ,CAAQI,GAAR,CAAP;AACH;;AAED,SAAOD,GAAG,CAACC,GAAD,CAAH,KAAaC,SAApB;AACH,CAPD","sourcesContent":["'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (array1, array2, options = {}) {\n\n    if (!array1 ||\n        !array2) {\n\n        return (options.first ? null : []);\n    }\n\n    const common = [];\n    const hash = (Array.isArray(array1) ? new Set(array1) : array1);\n    const found = new Set();\n    for (const value of array2) {\n        if (internals.has(hash, value) &&\n            !found.has(value)) {\n\n            if (options.first) {\n                return value;\n            }\n\n            common.push(value);\n            found.add(value);\n        }\n    }\n\n    return (options.first ? null : common);\n};\n\n\ninternals.has = function (ref, key) {\n\n    if (typeof ref.has === 'function') {\n        return ref.has(key);\n    }\n\n    return ref[key] !== undefined;\n};\n"]},"metadata":{},"sourceType":"script"}