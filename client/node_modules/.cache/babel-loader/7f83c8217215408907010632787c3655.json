{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\explore-component\\\\Display-movies.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport SearchMovie from \"./Search-movie\";\nimport ReactLoading from \"react-loading\";\nconst server = \"http://localhost:443/api\";\nexport default class DisplayMovies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSearchResult = (keyword, result) => {\n      this.setState({\n        searchKeyword: keyword,\n        searchResult: result\n      });\n    };\n\n    this.movieRecommendations = () => {\n      return this.state.movieList.map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          server: server,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.hideRecommendations = () => {\n      this.setState({\n        displayRecommendations: false\n      });\n    };\n\n    this.displayRecommendations = () => {\n      if (this.state.displayRecommendations) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, \"Movie Recommendations\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }), this.movieRecommendations());\n      } else {\n        return null;\n      }\n    };\n\n    this.state = {\n      searchText: \"\",\n      movieList: [],\n      displayRecommendations: true,\n      searchKeyword: \"\",\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${server}/recommendations`).then(res => {\n      this.setState({\n        movieList: res.data,\n        isLoading: false\n      });\n    });\n  }\n\n  isLoading() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-5\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ReactLoading, {\n        type: \"bars\",\n        color: \"#1AC8DB\",\n        height: 420,\n        width: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return this.displayRecommendations();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchMovie, {\n      server: server,\n      getSearchResult: this.getSearchResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), this.isLoading());\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/explore-component/Display-movies.js"],"names":["React","axios","Movie","SearchMovie","ReactLoading","server","DisplayMovies","Component","constructor","props","getSearchResult","keyword","result","setState","searchKeyword","searchResult","movieRecommendations","state","movieList","map","movie","index","hideRecommendations","displayRecommendations","searchText","isLoading","componentDidMount","get","then","res","data","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport SearchMovie from \"./Search-movie\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst server = \"http://localhost:443/api\";\r\n\r\nexport default class DisplayMovies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchText: \"\",\r\n      movieList: [],\r\n      displayRecommendations: true,\r\n      searchKeyword: \"\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`${server}/recommendations`).then((res) => {\r\n      this.setState({ movieList: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  getSearchResult = (keyword, result) => {\r\n    this.setState({ searchKeyword: keyword, searchResult: result });\r\n  };\r\n\r\n  movieRecommendations = () => {\r\n    return this.state.movieList.map((movie, index) => {\r\n      return <Movie key={index} movie={movie} server={server} />;\r\n    });\r\n  };\r\n\r\n  hideRecommendations = () => {\r\n    this.setState({ displayRecommendations: false });\r\n  };\r\n\r\n  displayRecommendations = () => {\r\n    if (this.state.displayRecommendations) {\r\n      return (\r\n        <div>\r\n          <h2 align=\"center\">Movie Recommendations</h2>\r\n          <br></br>\r\n\r\n          {this.movieRecommendations()}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  isLoading() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <div className=\"mt-5\" align=\"center\">\r\n          <ReactLoading type=\"bars\" color=\"#1AC8DB\" height={420} width={300} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.displayRecommendations();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchMovie server={server} getSearchResult={this.getSearchResult} />\r\n        <hr></hr>\r\n        <br></br>\r\n        {this.isLoading()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}