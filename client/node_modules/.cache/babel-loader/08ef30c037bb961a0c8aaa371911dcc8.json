{"ast":null,"code":"'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Ref = require('./ref');\n\nconst internals = {};\n\nexports.schema = function (Joi, config) {\n  if (config !== undefined && config !== null && typeof config === 'object') {\n    if (config.isJoi) {\n      return config;\n    }\n\n    if (Array.isArray(config)) {\n      return Joi.alternatives().try(config);\n    }\n\n    if (config instanceof RegExp) {\n      return Joi.string().regex(config);\n    }\n\n    if (config instanceof Date) {\n      return Joi.date().valid(config);\n    }\n\n    return Joi.object().keys(config);\n  }\n\n  if (typeof config === 'string') {\n    return Joi.string().valid(config);\n  }\n\n  if (typeof config === 'number') {\n    return Joi.number().valid(config);\n  }\n\n  if (typeof config === 'boolean') {\n    return Joi.boolean().valid(config);\n  }\n\n  if (Ref.isRef(config)) {\n    return Joi.valid(config);\n  }\n\n  Hoek.assert(config === null, 'Invalid schema content:', config);\n  return Joi.valid(null);\n};\n\nexports.ref = function (id) {\n  return Ref.isRef(id) ? id : Ref.create(id);\n};","map":{"version":3,"sources":["C:/Users/Asus A455L/portfolio-rizky/portfolio2/client/node_modules/@hapi/joi/lib/cast.js"],"names":["Hoek","require","Ref","internals","exports","schema","Joi","config","undefined","isJoi","Array","isArray","alternatives","try","RegExp","string","regex","Date","date","valid","object","keys","number","boolean","isRef","assert","ref","id","create"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AAEA,MAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AAGA,MAAME,SAAS,GAAG,EAAlB;;AAGAC,OAAO,CAACC,MAAR,GAAiB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAEpC,MAAIA,MAAM,KAAKC,SAAX,IAAwBD,MAAM,KAAK,IAAnC,IAA2C,OAAOA,MAAP,KAAkB,QAAjE,EAA2E;AAEvE,QAAIA,MAAM,CAACE,KAAX,EAAkB;AACd,aAAOF,MAAP;AACH;;AAED,QAAIG,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACvB,aAAOD,GAAG,CAACM,YAAJ,GAAmBC,GAAnB,CAAuBN,MAAvB,CAAP;AACH;;AAED,QAAIA,MAAM,YAAYO,MAAtB,EAA8B;AAC1B,aAAOR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmBT,MAAnB,CAAP;AACH;;AAED,QAAIA,MAAM,YAAYU,IAAtB,EAA4B;AACxB,aAAOX,GAAG,CAACY,IAAJ,GAAWC,KAAX,CAAiBZ,MAAjB,CAAP;AACH;;AAED,WAAOD,GAAG,CAACc,MAAJ,GAAaC,IAAb,CAAkBd,MAAlB,CAAP;AACH;;AAED,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAOD,GAAG,CAACS,MAAJ,GAAaI,KAAb,CAAmBZ,MAAnB,CAAP;AACH;;AAED,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAOD,GAAG,CAACgB,MAAJ,GAAaH,KAAb,CAAmBZ,MAAnB,CAAP;AACH;;AAED,MAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;AAC7B,WAAOD,GAAG,CAACiB,OAAJ,GAAcJ,KAAd,CAAoBZ,MAApB,CAAP;AACH;;AAED,MAAIL,GAAG,CAACsB,KAAJ,CAAUjB,MAAV,CAAJ,EAAuB;AACnB,WAAOD,GAAG,CAACa,KAAJ,CAAUZ,MAAV,CAAP;AACH;;AAEDP,EAAAA,IAAI,CAACyB,MAAL,CAAYlB,MAAM,KAAK,IAAvB,EAA6B,yBAA7B,EAAwDA,MAAxD;AAEA,SAAOD,GAAG,CAACa,KAAJ,CAAU,IAAV,CAAP;AACH,CA1CD;;AA6CAf,OAAO,CAACsB,GAAR,GAAc,UAAUC,EAAV,EAAc;AAExB,SAAOzB,GAAG,CAACsB,KAAJ,CAAUG,EAAV,IAAgBA,EAAhB,GAAqBzB,GAAG,CAAC0B,MAAJ,CAAWD,EAAX,CAA5B;AACH,CAHD","sourcesContent":["'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Ref = require('./ref');\n\n\nconst internals = {};\n\n\nexports.schema = function (Joi, config) {\n\n    if (config !== undefined && config !== null && typeof config === 'object') {\n\n        if (config.isJoi) {\n            return config;\n        }\n\n        if (Array.isArray(config)) {\n            return Joi.alternatives().try(config);\n        }\n\n        if (config instanceof RegExp) {\n            return Joi.string().regex(config);\n        }\n\n        if (config instanceof Date) {\n            return Joi.date().valid(config);\n        }\n\n        return Joi.object().keys(config);\n    }\n\n    if (typeof config === 'string') {\n        return Joi.string().valid(config);\n    }\n\n    if (typeof config === 'number') {\n        return Joi.number().valid(config);\n    }\n\n    if (typeof config === 'boolean') {\n        return Joi.boolean().valid(config);\n    }\n\n    if (Ref.isRef(config)) {\n        return Joi.valid(config);\n    }\n\n    Hoek.assert(config === null, 'Invalid schema content:', config);\n\n    return Joi.valid(null);\n};\n\n\nexports.ref = function (id) {\n\n    return Ref.isRef(id) ? id : Ref.create(id);\n};\n"]},"metadata":{},"sourceType":"script"}