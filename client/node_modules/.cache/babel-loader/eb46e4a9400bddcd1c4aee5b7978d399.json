{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio2\\\\client\\\\src\\\\components\\\\wall-component\\\\Reply-form.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nexport default class ReplyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeReplyText = this.onChangeReplyText.bind(this);\n    this.onSubmitReply = this.onSubmitReply.bind(this);\n    this.state = {\n      replyText: \"\"\n    };\n  }\n\n  onChangeReplyText(e) {\n    this.setState({\n      replyText: e.target.value\n    });\n  }\n\n  onSubmitReply(e, post_id) {\n    e.preventDefault();\n    const reply = {\n      userName: this.state.userName,\n      replyText: this.state.replyText\n    };\n    axios.post(`${this.props.server}/replyPost/${post_id}`, reply).then(res => {\n      const postIndex = this.props.postList.findIndex(el => {\n        return el._id === post_id;\n      });\n      const postList = this.props.postList;\n      const myPostList = this.props.myPostList;\n      const updatePostList = this.props.updatePostList;\n      postList[postIndex].reply = res.data;\n\n      if (myPostList) {\n        const myPostIndex = this.props.myPostList.findIndex(el => {\n          return el._id === post_id;\n        });\n        console.log(\"mypostlist\", myPostList);\n        myPostList[myPostIndex].reply = res.data;\n        updatePostList(postList, myPostList);\n      } else {\n        updatePostList(postList);\n      }\n    }).catch(err => console.log(err));\n    this.setState({\n      replyText: \"\"\n    });\n  }\n\n  replyForm(post_id) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.onSubmitReply(e, post_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      id: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Write comment....\",\n      className: \"form-control\",\n      id: \"exampleFormControlTextarea1\",\n      rows: \"2\",\n      required: true,\n      value: this.state.replyText,\n      onChange: this.onChangeReplyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send Reply\",\n      className: \"btn btn-primary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, this.replyForm(this.props.post._id));\n  }\n\n}","map":{"version":3,"sources":["E:/portfolio2/client/src/components/wall-component/Reply-form.js"],"names":["React","axios","ReplyForm","Component","constructor","props","onChangeReplyText","bind","onSubmitReply","state","replyText","e","setState","target","value","post_id","preventDefault","reply","userName","post","server","then","res","postIndex","postList","findIndex","el","_id","myPostList","updatePostList","data","myPostIndex","console","log","catch","err","replyForm","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ReplyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeReplyText = this.onChangeReplyText.bind(this);\r\n    this.onSubmitReply = this.onSubmitReply.bind(this);\r\n\r\n    this.state = {\r\n      replyText: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeReplyText(e) {\r\n    this.setState({\r\n      replyText: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmitReply(e, post_id) {\r\n    e.preventDefault();\r\n\r\n    const reply = {\r\n      userName: this.state.userName,\r\n      replyText: this.state.replyText,\r\n    };\r\n\r\n    axios\r\n      .post(`${this.props.server}/replyPost/${post_id}`, reply)\r\n      .then((res) => {\r\n        const postIndex = this.props.postList.findIndex((el) => {\r\n          return el._id === post_id;\r\n        });\r\n\r\n        const postList = this.props.postList;\r\n        const myPostList = this.props.myPostList;\r\n        const updatePostList = this.props.updatePostList;\r\n        postList[postIndex].reply = res.data;\r\n\r\n        if (myPostList) {\r\n          const myPostIndex = this.props.myPostList.findIndex((el) => {\r\n            return el._id === post_id;\r\n          });\r\n          console.log(\"mypostlist\", myPostList);\r\n          myPostList[myPostIndex].reply = res.data;\r\n          updatePostList(postList, myPostList);\r\n        } else {\r\n          updatePostList(postList);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    this.setState({\r\n      replyText: \"\",\r\n    });\r\n  }\r\n\r\n  replyForm(post_id) {\r\n    return (\r\n      <div>\r\n        <form onSubmit={(e) => this.onSubmitReply(e, post_id)}>\r\n          <div className=\"form-group\" id=\"comment\">\r\n            <textarea\r\n              placeholder=\"Write comment....\"\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"2\"\r\n              required\r\n              value={this.state.replyText}\r\n              onChange={this.onChangeReplyText}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Send Reply\"\r\n              className=\"btn btn-primary btn-sm\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.replyForm(this.props.post._id)}</div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}