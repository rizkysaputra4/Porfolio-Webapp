{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus A455L\\\\portfolio-rizky\\\\portfolio2\\\\client\\\\src\\\\components\\\\wall-component\\\\UpdatePost.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { UserConsumer } from \"../context\";\nconst server = \"http://localhost:5000/api\";\nexport default class UpdatePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePostButton = props => {\n      const [modalShow, setModalShow] = React.useState(false);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => setModalShow(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \"Edit Post\"), /*#__PURE__*/React.createElement(this.formUpdatePost, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.onChangeUpdatePost = this.onChangeUpdatePost.bind(this);\n    this.onSubmitUpdatePost = this.onSubmitUpdatePost.bind(this);\n    this.callUpdateTextState = this.callUpdateTextState.bind(this);\n    this.setDefaultPost = this.setDefaultPost.bind(this);\n    this.state = {\n      updateTextPost: \"\"\n    };\n  }\n\n  setDefaultPost(defaultPost) {\n    this.setState({\n      updateTextPost: defaultPost\n    });\n  }\n\n  onChangeUpdatePost(e) {\n    console.log(this.state.updateTextPost);\n    this.setState({\n      updateTextPost: e.target.value\n    });\n  }\n\n  callUpdateTextState() {\n    return this.state.updateTextPost;\n  }\n\n  onSubmitUpdatePost(post_id) {\n    console.log(post_id);\n    const post = {\n      post: this.state.updateTextPost,\n      withCredentials: true\n    };\n    axios.post(`${server}/updatePost/${post_id}`, post).then(res => console.log(res)).catch(err => console.log(err));\n    this.setState({\n      updateTextPost: \"\"\n    });\n  }\n\n  formUpdatePost(props) {\n    return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Centered Modal\"), /*#__PURE__*/React.createElement(UserConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, value => {\n      return /*#__PURE__*/React.createElement(Form, {\n        onSubmit: () => this.onSubmitUpdatePost(value.post._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"updatePostText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"Example textarea\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: value.post.post,\n        as: \"textarea\",\n        rows: 3,\n        onChange: this.onChangeUpdatePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, \"Submit\"));\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(this.updatePostButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Asus A455L/portfolio-rizky/portfolio2/client/src/components/wall-component/UpdatePost.js"],"names":["React","Component","axios","Modal","Button","Form","UserConsumer","server","UpdatePost","constructor","props","updatePostButton","modalShow","setModalShow","useState","onChangeUpdatePost","bind","onSubmitUpdatePost","callUpdateTextState","setDefaultPost","state","updateTextPost","defaultPost","setState","e","console","log","target","value","post_id","post","withCredentials","then","res","catch","err","formUpdatePost","_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { UserConsumer } from \"../context\";\r\n\r\nconst server = \"http://localhost:5000/api\";\r\n\r\nexport default class UpdatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUpdatePost = this.onChangeUpdatePost.bind(this);\r\n    this.onSubmitUpdatePost = this.onSubmitUpdatePost.bind(this);\r\n    this.callUpdateTextState = this.callUpdateTextState.bind(this);\r\n    this.setDefaultPost = this.setDefaultPost.bind(this);\r\n\r\n    this.state = {\r\n      updateTextPost: \"\",\r\n    };\r\n  }\r\n\r\n  setDefaultPost(defaultPost) {\r\n    this.setState({ updateTextPost: defaultPost });\r\n  }\r\n\r\n  onChangeUpdatePost(e) {\r\n    console.log(this.state.updateTextPost);\r\n    this.setState({\r\n      updateTextPost: e.target.value,\r\n    });\r\n  }\r\n\r\n  callUpdateTextState() {\r\n    return this.state.updateTextPost;\r\n  }\r\n\r\n  onSubmitUpdatePost(post_id) {\r\n    console.log(post_id);\r\n    const post = {\r\n      post: this.state.updateTextPost,\r\n      withCredentials: true,\r\n    };\r\n\r\n    axios\r\n      .post(`${server}/updatePost/${post_id}`, post)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n\r\n    this.setState({\r\n      updateTextPost: \"\",\r\n    });\r\n  }\r\n\r\n  formUpdatePost(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Modal heading\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <UserConsumer>\r\n            {(value) => {\r\n              return (\r\n                <Form onSubmit={() => this.onSubmitUpdatePost(value.post._id)}>\r\n                  <Form.Group controlId=\"updatePostText\">\r\n                    <Form.Label>Example textarea</Form.Label>\r\n                    <Form.Control\r\n                      value={value.post.post}\r\n                      as=\"textarea\"\r\n                      rows={3}\r\n                      onChange={this.onChangeUpdatePost}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              );\r\n            }}\r\n          </UserConsumer>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  updatePostButton = (props) => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n          Edit Post\r\n        </Button>\r\n\r\n        <this.formUpdatePost\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <this.updatePostButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}